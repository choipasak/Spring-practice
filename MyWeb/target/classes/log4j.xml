<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- 
        자바를 이용한 백엔드 로직을 작성하다 보면, 결과를 확인하기 위해
        System.out.println()을 자주 사용해 왔습니다.
        System.out.println()은 단순 출력 이상의 기능을 수행할 수 없기 때문에
        로그에 대한 다양한 기능을 제공하는 log4j 라이브러리를 사용합니다.
        - 로그를 찍어주는 라이브러리 중에 점유율이 제일 높다.
        - 롬복과도 호환이 좋음
     -->

	<!-- Appenders -->
	<!-- appender: 로그의 출력 위치(파일, 콘솔, DB등)를 결정합니다. 
        ConsoleAppender: 콘솔에 로그 메세지를 출력. -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	<!-- 날짜별 로그 파일 생성 -->
    <!-- 설정한 기간 단위로 새 파일을 만들어서 로그 메세지를 매일 매일 기록합니다.
         DailyRollingFileAppender: 설정한 기간 단위로 새 파일을 만들어서 로그 메세지를 기록. -->
    <appender name="rollingFile" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="File" value="C:/LOG/all.log" />
        <param name="Append" value="true" />
        <!-- <param name="MaxFileSize" value="100MB" /> -->
        <param name="DatePattern" value="'.'yyyy-MM-dd" />
        
        <!-- 
            로그 출력 시 형식 지정
            %p -> 로그 레벨 출력 (info, error, warn...)
            %m -> 메세지
            %c -> 전체 패키지명 또는 파일 이름 (%C -> 클래스 이름)
            %d -> 이벤트 발생 시각 (yyyy-MM-dd HH:mm:ss)
            %n -> 줄 개행 기호
            숫자: 공백. 글자가 차지할 공간. 음수로 주면 좌측정렬, 양수 주면 우측
         -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %p [%C{10}] %m%n" />
        </layout>
    </appender>
    <!-- 날짜별 로그 파일 생성 (에러만) -->
    <appender name="errFile" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="Threshold" value="ERROR" />
        <param name="File" value="C:/LOG/error.log" />
        <param name="Append" value="true" />
        <!-- <param name="MaxFileSize" value="100MB" /> -->
        <param name="DatePattern" value="'.'yyyy-MM-dd" />
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %p [%C{10}] %m%n" />
        </layout>
    </appender>
    
    
	
	
	
	<!-- Application Loggers -->
	<logger name="com.spring.myweb">
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	
	<!-- SQL Logger -->
    
    <!-- DB 연결에 관련된 이벤트를 기록 (Connection pool 등...) -->
    <logger name="jdbc.connection" additivity="false">
        <level value="warn" /> <!-- warn이상만 출력 됨 -->
        <appender-ref ref="console" />
    </logger>
    
    <!-- ResultSet을 제외한 모든 JDBC 호출 내역을 기록. -->
    <logger name="jdbc.audit" additivity="false">
        <level value="warn" />
        <appender-ref ref="console" />
    </logger>
    
    <!-- ResultSet을 포함한 모든 JDBC 호출 내역을 기록 -->
    <logger name="jdbc.resultset" additivity="false">
        <level value="warn" />
        <appender-ref ref="console" />
    </logger>
    
    <!-- SQL문만 기록. (?값이 드러납니다.) -->
    <logger name="jdbc.sqlonly" additivity="false">
        <level value="info" />
        <appender-ref ref="console" />
    </logger>
    
    <!-- table 모양으로 조회된 내용을 기록합니다. -->
    <logger name="jdbc.resultsettable" additivity="false">
        <level value="info" />
        <appender-ref ref="console" />
    </logger>
    
    <!-- 해당 SQL을 실행시키는 데 소요된 시간 정보 기록(밀리초) -->
    <logger name="jdbc.sqltiming" additivity="false">
        <level value="info" />
        <appender-ref ref="console" />
    </logger>
    
    
    
    

	<!-- Root Logger -->
	<root>
		<priority value="info" />
		<appender-ref ref="console" />
		
		<!-- 위에 추가 해 줬던 로그파일 설정 -->
		<appender-ref ref="errFile" />
		<appender-ref ref="rollingFile" />
	</root>
	
</log4j:configuration>
