<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 구현하고자 하는 인터페이스의 풀 경로를 작성 -->
<mapper namespace="com.spring.basic.score.repository.IScoreMapper" >

	<!-- DB 컬럼명과 Entity 객체의 필드명을 맞추는 resultMap을 선언
		type에는 풀 경로 + 파일 이름, id는 부를 이름
		=> '야 Score객체 포장할 때 이름 다른거 있거든 그거 내가 알려줄게' 라는 의미 -->
	<!-- sql문이 리턴이 있는 경우 -->
	<resultMap type="com.spring.basic.score.entity.Score" id="scoreMap">
		<!-- 테이블에서 PRIMARY KEY로 등록한 컬럼은 id태그로, 나머지는 result태그로 선언 -->
		<!-- property에는 변수명(= 필드명) column에는 컬럼명 작성 순서 상관 없다! -->
		<id property="stuNum" column="stu_num" />
		<result property="stuName" column="stu_name" />
	</resultMap>
	
	<!-- 점수 등록 기능 -->
	<!-- id에는 구현하고자 하는 메서드의 이름을 넣는다. -->
	<insert id="save"> <!-- save()는 매개 값으로 Score객체를 받아옴 -->
	<!-- #{}안에 실제 Score객체의 변수 명과 동일하게 작성해 줘야 함 -->
		INSERT INTO score
		VALUES(score_seq.NEXTVAL, #{stuName}, #{kor}, #{eng},
		#{math}, #{total}, #{average}, #{grade})
	</insert>

	<!-- 점수 전체 조회 기능 -->
	<!-- findAll의 리턴 타입은 List<Score>입니다.
		List는 직접 언급하실 필요 없어요.(조회되는 데이터가 여러 행이면 알아서 포장한다.)
		하지만 Score 객체 같은 경우에는 score 테이블의 컬럼명과 필드명이 완벽히 일치하지 않기 때문에
		객체로 포장할 때 위에 선언한 resultMap을 참조해서 객체로 포장하라는 얘기입니다. -->
	<select id="findAll" resultMap="scoreMap"> <!-- 변수명과 컬럼명이 달라서 resultMap작성해 줘야 함 -->
		SELECT * FROM score
	</select>

	<!-- 점수 삭제 기능 -->
	<delete id="deleteByStuNum">
		DELETE FROM score WHERE stu_num = #{stuNum}
	</delete>

	<!-- 학생 한명의 상세 정보 조회 -->
	<select id="findByStuNum" resultMap="scoreMap">
		SELECT * FROM score WHERE stu_num = #{stuNum}
	</select>

	<update id="modify">
		UPDATE score
		SET kor=#{kor}, eng=#{eng}, math=#{math},
		 total=#{total}, average=#{average}, grade=#{grade}
		WHERE stu_num = #{stuNum}
	</update>

</mapper>


































